# Generated by Django 4.2.7 on 2024-01-06 13:21
from json import JSONDecodeError

from django.db import migrations, models

import ephios.extra.json
from ephios.core.services.notifications.backends import enabled_notification_backends
from ephios.core.services.notifications.types import notification_type_from_slug
from ephios.extra.preferences import JSONSerializer


def migrate_disabled_notifications(apps, schema_editor):
    UserProfile = apps.get_model("core", "UserProfile")
    UserPreferenceModel = apps.get_model("dynamic_preferences_users", "UserPreferenceModel")
    db_alias = schema_editor.connection.alias
    backends = [backend.slug for backend in enabled_notification_backends()]
    for profile in UserProfile.all_objects.using(db_alias).all():
        try:
            preferences = JSONSerializer.deserialize(
                UserPreferenceModel.objects.using(db_alias)
                .get(section="notifications", name="notifications", instance__pk=profile.pk)
                .raw_value
            )
        except (UserPreferenceModel.DoesNotExist, ValueError, JSONDecodeError):
            continue
        for notification_type, active_backends in preferences.items():
            for backend in set(backends) - set(active_backends):
                profile.disabled_notifications.append([backend, notification_type])
        profile.save()


def revert_disabled_notifications(apps, schema_editor):
    UserProfile = apps.get_model("core", "UserProfile")
    UserPreferenceModel = apps.get_model("dynamic_preferences_users", "UserPreferenceModel")
    db_alias = schema_editor.connection.alias
    backends = [backend.slug for backend in enabled_notification_backends()]
    for profile in UserProfile.all_objects.using(db_alias).all():
        try:
            preferences_instance = UserPreferenceModel.objects.using(db_alias).get(
                section="notifications", name="notifications", instance__pk=profile.pk
            )
            preferences = JSONSerializer.deserialize(preferences_instance.raw_value)
            for disabled_tuple in profile.disabled_notifications:
                backend_slug, type_slug = disabled_tuple
                try:
                    notification_type_from_slug(type_slug)
                except ValueError:
                    continue
                enabled = preferences.get(type_slug, backends)
                if backend_slug in enabled:
                    enabled.remove(backend_slug)
                preferences[type_slug] = enabled
            preferences_instance.raw_value = JSONSerializer.serialize(preferences)
            preferences_instance.save()
        except (UserPreferenceModel.DoesNotExist, JSONDecodeError):
            continue


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0025_remove_notification_failed_notification_processed_by_and_more"),
        ("dynamic_preferences_users", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="userprofile",
            name="disabled_notifications",
            field=models.JSONField(
                decoder=ephios.extra.json.CustomJSONDecoder,
                default=list,
                encoder=ephios.extra.json.CustomJSONEncoder,
            ),
        ),
        migrations.RunPython(migrate_disabled_notifications, revert_disabled_notifications),
        migrations.AddField(
            model_name="userprofile",
            name="email_invalid",
            field=models.BooleanField(default=False, verbose_name="Email address invalid"),
        ),
    ]
