[tool.poetry]
name = "ephios"
version = "0.0.0" # automatically set by poetry-dynamic-versioning
description = "ephios is a tool to manage shifts for medical services."
authors = ["Julian Baumann <julian@ephios.de>", "Felix Rindt <felix@ephios.de>"]
license = "MIT"
readme = "README.md"
homepage = "https://ephios.de"
repository = "https://github.com/ephios-dev/ephios"
documentation = "https://docs.ephios.de/en/stable/"

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.1"
django-environ = "^0.9.0"
django-guardian = "^2.4.0"
django-ical = "^1.8.3"
django-polymorphic = "^3.1.0"
django-select2 = ">=8.0,<9.0"
reportlab = "^3.6.11"
django-formset-js-improved = "^0.5.0"
django-csp = "^3.7"
bleach = ">=6.0.0,<7.0.0"
Markdown = "^3.3.7"

psycopg2 = {version = "^2.9.3", optional = true}
mysqlclient = {version = "^2.1.1", optional = true}
django-redis = {version = "^5.2.0", optional = true}
django-compressor = "^4.3"
django-statici18n = "^2.3.0"
django-dynamic-preferences = "^1.13.0"
django-crispy-forms = "^1.14.0"
django-webpush = "^0.3.4"
importlib-metadata = { version = ">=5.2.0", python = "<3.9" }
django-libsass = "^0.9"
crispy-bootstrap5 = ">=0.6,<0.8"
djangorestframework = "^3.13.1"
django-coverage-plugin = "^2.0.3"
django-filter = "^22.1"
djangorestframework-guardian = "^0.3.0"
uritemplate = "^4.1.1"
django-recurrence = "^1.11.1"

[tool.poetry.extras]
pgsql = ["psycopg2"]
mysql = ["mysqlclient"]
redis = ["django-redis"]

[tool.poetry.group.dev.dependencies]
black = "^22.8"
pre-commit = "^2.20.0"
django-debug-toolbar = "^3.6"
pytest-django = "^4.5.2"
django-webtest = "^1.9.9"
django-extensions = "^3.2.1"
coverage = "^6.4"
coveralls = "^3.3.1"
django-coverage-plugin = "^2.0.1"
isort = "^5.10.1"
pylint = "^2.15.9"
autoflake = "^1.6"
Sphinx = "^5.1.1"
sphinx-rtd-theme = "^1.0.0"
sphinx-intl = "^2.0.1"
sphinx-github-changelog = "^1.2.0"

[tool.black]
line-length = 100
# https://github.com/psf/black/blob/master/docs/compatible_configs.md

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.pylint.messages_control]
# C0330 and C0301 are disabled for use of black
disable = """C0301,
duplicate-code, attribute-defined-outside-init, missing-module-docstring, missing-class-docstring,
no-member, invalid-name, import-outside-toplevel, unused-argument, too-many-ancestors, missing-function-docstring,
too-few-public-methods, too-many-arguments, cyclic-import, inconsistent-return-statements,
useless-object-inheritance, logging-fstring-interpolation
"""

[tool.pylint.format]
max-line-length = "100"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
addopts = "--fail-on-template-vars"
filterwarnings = [
    # displaying naive datetime warnings as errors
    # as seen in https://docs.djangoproject.com/en/4.1/topics/i18n/timezones/#code
    # and https://docs.pytest.org/en/stable/how-to/capture-warnings.html#controlling-warnings
    'error:DateTimeField .* received a naive datetime',
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"


[tool.coverage.run]
plugins = [
    'django_coverage_plugin',
]
include = ['ephios/*.py', 'ephios/*.html']
branch = true

[tool.coverage.django_coverage_plugin]
template_extensions = 'html, txt, tex, email'

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
bump = true
